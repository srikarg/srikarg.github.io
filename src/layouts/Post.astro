---
import type { CollectionEntry } from 'astro:content'
import Button from '../components/Button.astro'
import TableOfContents from '../components/TableOfContents.astro'
import BackToTopButton from '../components/BackToTopButton.astro'
import PostPagination from '../components/PostPagination.astro'
import ContentLayout from './Content.astro'

interface Props {
  post: CollectionEntry<'blog'>
  previousPost: CollectionEntry<'blog'>
  nextPost: CollectionEntry<'blog'>
}

const { post, previousPost, nextPost } = Astro.props

const { headings } = await post.render()
---

<ContentLayout smoothScrollEnabled={true}>
  <header
    class="mb-10"
    style={post.data.image && `background-image:url(${post.data.image})`}
  >
    <h1
      class="mb-10 font-display text-5xl font-bold uppercase md:text-6xl"
      transition:name={`post-title-${post.data.title}`}
      transition:animate="initial"
    >
      {post.data.title}
    </h1>
    {
      post.data.tags && (
        <section>
          {post.data.tags?.map((t: string) => (
            <span class="mr-4 rounded bg-red-800 p-3 font-display text-xl text-white hover:scale-50 hover:font-bold dark:bg-slate-800">
              #{t}
            </span>
          ))}
        </section>
      )
    }
  </header>

  {post.data.tableOfContents && <TableOfContents headings={headings} />}

  <BackToTopButton />

  <article
    class="prose prose-slate mx-auto dark:prose-invert md:prose-lg prose-headings:font-display prose-headings:uppercase"
  >
    <slot />
  </article>

  <footer>
    <div class="mt-4">
      {
        post.data['hackerNewsLink'] && (
          <Button link={post.data['hackerNewsLink']}>
            Discuss on Hacker News
          </Button>
        )
      }
    </div>
    <PostPagination previousPost={previousPost} nextPost={nextPost} />
  </footer>
</ContentLayout>
